--- Math-LP-Solve-3.03/Makefile.PL.orig	Fri Apr  6 13:27:17 2001
+++ Math-LP-Solve-3.03/Makefile.PL	Sun Dec  8 16:21:42 2002
@@ -1,62 +1,6 @@
 use ExtUtils::MakeMaker;
 my $VERSION = '3.03'; # major number equals that of underlying lp_solve library
 
-# the underlying C library
-my $lp_solve_dist = 'lp_solve_3.2';
-my $liblpk        = "$lp_solve_dist/liblpk.a";
-my $tarball       = "$lp_solve_dist.tar.gz";
-
-# check for the lp_solve distribution in the current dir
-if(-d $lp_solve_dist) {
-    warn "*** I see you have a subdirectory $lp_solve_dist. Nice!\n",
-         "*** I will use that directory for getting liblpk.a.\n";
-}
-else {
-    warn "*** You do not have a $lp_solve_dist directory yet.\n",
-         "*** I will extract it for you from $tarball.\n";
-    if(! -f $tarball) {
-	warn "*** But first I need to download $tarball to the current directory.\n";
-	FetchDistribution("ftp://ftp.ics.ele.tue.nl/pub/lp_solve/$tarball");
-    }
-    ExtractDistribution($tarball);
-}
-
-# compile lp_solve if needed
-if(-e $liblpk) {
-    warn "*** I see you already have have $liblpk. Nice!\n",
-         "*** Just be sure it is compiled for position independent code (with the -fPIC\n",
-         "*** flag when using gcc). Otherwise the installation will fail later on.\n";
-}
-else {
-    warn "*** You do not have $liblpk yet.\n",
-         "*** I will attempt to compile it for you.\n";
-    my @make_flags = ( 
-       # These compilation flags will be tried in succession, until one combination works.
-       # If none of these work for you, but you do find a valid combination for the
-       # platform you are working on, please mail them to wimv@cpan.org. I will incorporate
-       # them in the next release of Math::LP::Solve.
-       {MATHLIB => '-lm', LEX => 'lex', YACC => 'yacc'}, # works for HP-UX, Solaris, Digital, IRIX
-       {MATHLIB => '-lm', LEX => 'flex -l', LEXLIB => '-lfl'}, # works for Linux
-       {MATHLIB => '-lm'}, # just the minimally required compilation flags for any platform
-    );
-    while(1) {
-	my $rh_flags = shift @make_flags or
-	    die "*** Aargh! I found no way of compiling $lp_solve_dist\n",
-	        "*** You will need to try this yourself. Just make sure you generate\n",
-                "*** position independent code (e.g. with -fPIC when using gcc)\n";
-	eval { CompileDistribution($lp_solve_dist, %$rh_flags) };
-	if($@) {
-	    warn "*** Oops! Compilation failed.\n",
-	         "*** I will cleanup and recompile with other flags if available ...\n";
-	    CleanDistribution($lp_solve_dist);
-	}
-	else { # compilation succeeded
-	    warn "*** Nice! I succeeded in compiling $lp_solve_dist/liblpk.a.\n";
-	    last;
-	}
-    }
-}
-
 # See lib/ExtUtils/MakeMaker.pm for details of how to influence
 # the contents of the Makefile that is written.
 WriteMakefile(
@@ -67,9 +11,9 @@
     ) : (),
     #'VERSION'   => $VERSION, 
     'VERSION_FROM' => 'Solve.pm',
-    'LIBS'	=> ["-lfl -ll -L$lp_solve_dist -llpk"],  
+    'LIBS'	=> [" -llpk"],  
     'DEFINE'	=> '',
-    'INC'	=> "-I$lp_solve_dist",
+    'INC'	=> "-I/usr/include/lp_solve",
     'EXE_FILES' => [],
 
     # for developers only
